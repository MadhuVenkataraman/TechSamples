buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.virtusa.workouts'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}
configurations {
	jaxb // Only for generation purpose
}
def generatedSourcesOutput = "$buildDir/generated/main/java"

dependencies {
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.boot:spring-boot-starter-web-services')

	// https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-ws
	compile group: 'org.springframework.integration', name: 'spring-integration-ws'
	compile group: 'org.springframework.integration', name: 'spring-integration-stream'
		compile group: 'org.springframework.integration', name: 'spring-integration-http'

	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-sleuth-zipkin
	compile group: 'org.springframework.cloud', name: 'spring-cloud-sleuth-zipkin', version: '2.0.1.RELEASE'
// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-sleuth
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '2.0.1.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-netflix-eureka-server
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '2.0.1.RELEASE'

	compile group: 'org.springframework.cloud', name: 'spring-cloud-netflix'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-context
	compile group: 'org.springframework.cloud', name: 'spring-cloud-context', version: '2.0.1.RELEASE'


//https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
	jaxb  'javax.xml.bind:jaxb-api:2.3.0'
	jaxb  'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
	jaxb  'com.sun.xml.bind:jaxb-impl:2.3.0.1'
	jaxb  'com.sun.xml.bind:jaxb-osgi:2.3.0.1'
	jaxb 'javax.activation:activation:1.1.1'
	jaxb "org.glassfish.jaxb:jaxb-xjc-jdk9:2.3.0.1"

	compile group: 'org.apache.ant', name: 'ant', version: '1.8.2'
	compile 'com.sun.xml.bind:jaxb-xjc:2.3.0.1'
	compile 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
	compile 'javax.xml.bind:jaxb-api:2.3.0'
	compile 'javax.activation:activation:1.1.1'
	compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.2'
	// https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
	
	compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.0.1'
	// https://mvnrepository.com/artifact/javax.xml.soap/javax.xml.soap-api
	compile group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '1.4.0'
	compile group: 'javax.xml.soap', name: 'javax.xml.soap-api', version: '1.3.5'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
task generateSources() {
	doLast {
		def jaxbTargetDir = file("$projectDir/src/main/java")

		if (!jaxbTargetDir.exists()) {
			jaxbTargetDir.mkdirs()
		}

		ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)

		ant.xjc(
				destdir: "${jaxbTargetDir}",
				schema: "${projectDir}/src/main/resources/schema/account.xsd",
				fork: true

		)

	}
}
compileJava {
	dependsOn generateSources
}